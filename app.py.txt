from flask import Flask
import os, json, requests, threading, time, re
import gspread
from google.oauth2.service_account import Credentials
from bs4 import BeautifulSoup
from datetime import datetime, timezone, timedelta

app = Flask(__name__)

# ==== 環境変数 ====
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
SHEET_ID = os.getenv("SHEET_ID")
CREDENTIALS_JSON = json.loads(os.getenv("CREDENTIALS_JSON"))

# ==== Google Sheets認証 ====
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = Credentials.from_service_account_info(CREDENTIALS_JSON, scopes=scope)
client = gspread.authorize(creds)
sheet = client.open_by_key(SHEET_ID).sheet1

# ==== Discord通知 ====
def send_discord_message(content):
    try:
        res = requests.post(WEBHOOK_URL, json={"content": content})
        print(f"Discord通知送信: {res.status_code}")
    except Exception as e:
        print(f"Discord通知エラー: {e}")

# ==== スプレッドシート監視 ====
def check_spreadsheet():
    print("📊 スプレッドシート監視開始")
    last_row = None
    while True:
        try:
            data = sheet.get_all_values()
            if not data:
                continue
            new_row = data[-1]
            if new_row != last_row:
                last_row = new_row
                message = f"✅ 新しい行が追加されました: {' | '.join(new_row)}"
                send_discord_message(message)
        except Exception as e:
            print(f"⚠️ エラー発生: {e}")
        time.sleep(30)

# ==== メルカリURL監視（削除・非公開検知） ====
def check_mercari_urls():
    print("🕵️ メルカリURL監視開始（商品名＆削除日時対応）")
    checked_urls = {}

    while True:
        try:
            # スプレッドシートの全データを取得
            data = sheet.get_all_values()
            text = "\n".join([" ".join(row) for row in data])
            urls = re.findall(r"https?://jp\.mercari\.com/item/[A-Za-z0-9]+", text)

            for url in urls:
                try:
                    res = requests.get(url, timeout=10)
                    if res.status_code == 200:
                        # 商品名を取得
                        soup = BeautifulSoup(res.text, "html.parser")
                        title_tag = soup.find("title")
                        title = title_tag.text.replace("メルカリ", "").strip() if title_tag else "不明な商品"
                        checked_urls[url] = title
                    else:
                        if url not in checked_urls:
                            checked_urls[url] = "商品名不明"

                        # 日本時間で削除検知時刻を記録
                        JST = timezone(timedelta(hours=9))
                        now = datetime.now(JST).strftime("%Y-%m-%d %H:%M:%S")

                        send_discord_message(
                            f"❌ メルカリ商品が削除または非公開になりました:\n"
                            f"🕒 削除検知: {now}\n"
                            f"📦 商品名: {checked_urls[url]}\n"
                            f"🔗 URL: {url}"
                        )
                except Exception as e:
                    print(f"⚠️ URLチェックエラー: {url} - {e}")

            time.sleep(1800)  # 30分ごとにチェック
        except Exception as e:
            print(f"⚠️ メルカリ監視ループエラー: {e}")
            time.sleep(60)

@app.route('/')
def home():
    return "Bot is running and watching Google Sheets & Mercari."

# ==== メイン実行 ====
if __name__ == "__main__":
    print("🚀 Bot起動中...")
    send_discord_message("✅ Render起動テスト通知（再起動検知）")

    # スプレッドシート監視スレッド
    threading.Thread(target=check_spreadsheet, daemon=True).start()

    # メルカリURL監視スレッド
    threading.Thread(target=check_mercari_urls, daemon=True).start()

    print("📊 スプレッドシート＆メルカリ監視スレッドを開始しました")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))